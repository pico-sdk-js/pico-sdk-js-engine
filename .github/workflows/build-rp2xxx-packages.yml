name: Build RP2XXX Package

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Create Release'
        type: boolean
        default: false

  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # PRODUCT_NAME, PACKAGE_NAME, & PACKAGE_VERSION are set in the 'Run build' step
  PRODUCT_NAME: tbd.0.0.0
  PACKAGE_NAME: tbd
  PACKAGE_VERSION: 0.0.0

  CREATE_RELEASE: ${{ !!inputs.release }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    # do initial pull of source w/o submodules to save time if npm install or beachball:check fails
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v4.0.1

    - name: Pull NPM Packages
      run: npm install

    - name: Check for changefiles
      if: ${{ !env.CREATE_RELEASE }}
      run: npm run beachball:check

    - name: Create changelog & bump version
      if: ${{ env.CREATE_RELEASE }}
      run: npm run beachball:bump -- --no-commit --no-push

    - name: pull submodules
      run: git submodule update --init --recursive

    - uses: ConorMacBride/install-package@v1
      name: Install APT packages
      with:
        apt: nodejs npm cmake gcc gcc-arm-none-eabi cppcheck clang-format libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib

    - name: Run build
      run: node build --rebuild --target rp2xxx --release

    - name: Archive production artifacts
      if: ${{ github.event_name == 'push' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.PRODUCT_NAME }}
        path: |
          build/pico-sdk-js-*.*

    - name: Create Release
      id: releaseStep
      if: ${{ env.CREATE_RELEASE }}
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{env.PACKAGE_VERSION}}
        name: Release ${{env.PACKAGE_NAME}} v${{env.PACKAGE_VERSION}}
        body_path: CHANGELOG.md
        draft: true
        prerelease: true
        files: |
          build/${{ env.PRODUCT_NAME }}.uf2
          build/${{ env.PRODUCT_NAME }}.elf
          build/${{ env.PRODUCT_NAME }}.elf.map
          build/${{ env.PRODUCT_NAME }}.bin
