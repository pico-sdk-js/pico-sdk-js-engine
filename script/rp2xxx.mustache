#include "modules.h"

#include "hardware/timer.h"

#include "jerryscript.h"
#include "jerry_helper.h"

{{#functions}}
static jerry_value_t {{name}}_handler(const jerry_value_t function_obj, const jerry_value_t this_val, const jerry_value_t args_p[], const jerry_length_t args_count)
{
    jerry_value_t ret_val;

    if (
        args_count != {{argCount}}
    {{#args}}
        || !jerry_value_is_{{jsType}}(args_p[{{index}}])
    {{/args}}
    )
    {
        ret_val = psj_jerry_create_error_obj(RUNTIME_ARG_ERROR, "{{signature}}");
        goto cleanup;
    }

    {{#args}}
    {{type}} {{name}} = psj_jerry_to_{{type}}(args_p[{{index}}]);
    {{/args}}

    {{#jsReturnType}}const {{returnType}} v = {{/jsReturnType}}{{name}}({{argNames}});

    {{#jsReturnType}}
    ret_val = jerry_create_{{.}}(v);
    {{/jsReturnType}}
    {{^jsReturnType}}
    ret_val = jerry_create_undefined();
    {{/jsReturnType}}

cleanup:

    return ret_val;
}

{{/functions}}
jerry_value_t get_hardware_module()
{
    jerry_value_t module = jerry_create_object();
    jerry_value_t handler;

    {{#functions}}
    handler = jerry_create_external_function({{name}}_handler);
    psj_jerry_set_property(module, "{{name}}", handler);
    jerry_release_value(handler);

    {{/functions}}
    return module;
}